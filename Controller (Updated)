import java.util.*;

public class Controller /*extends Deck?*/{
	
	protected Player[] players;
	
	protected static Pool pool; 
	
	protected Stack deck;
	
	protected static Stack discardPile;
	
	public Controller(){
		
		deck = new Stack();
		
		for(int i = 0; i != 52; i++){
			deck.add(Deck.getData()); 
		}
		
	}
	
	public static int playCards(Card[] cards){
		
		pool.score(cards); //passes the cards to pool's score to see if it's legal
		
		//Where should the return value be stored? Maybe make another variable to pass back?
		
		if(/*return value*/ == -1){
			System.out.println("That is an illegal move, please try again.");
		}
		else{
			players.score(/*return value*/);
			System.out.println("Current score is " + /*How do you return the value directly from player?*/);
		}
	}
	
	public static void discard(Card card){
		
		discardPile = new Stack();
		
		discardPile.push(card); //adds discard to the top of the pile. 
		
	}
	
	public static Object[] giveCard(String source){ //taking only in source, num of cards only for discard pile.
		
		int numberOfCards = 0;
		
		Object[] n = new Card[numberOfCards]; //Changed to object for library code to work, sorry.
		
		if(source == "discard"){
			
			Scanner sc = new Scanner(System.in);
			System.out.println("How many do you want to take from the discard?");
			numberOfCards = sc.nextInt();
			
			for(int i = 0; i < n.length; i++){
				n[i] = discardPile.pop();
			}
		}
		else if(source == "deck"){
			n[0] = deck.pop();
		}
		return n;
	}
	public static void main(String[] args){
		
		//test here! ~(^_^ ~)

	}
}
